@{
    var stripeSecretKey = ViewData["StripeSecretKey"] as string;
    var paymentIntentId = ViewBag.PaymentIntentId;

    ViewData["Title"] = "Checkout";
    // Example price per night
    decimal pricePerNight = ViewBag.Property.PricePerNight;

    // Calculate the number of nights
    int nights = (ViewBag.CheckoutDate - ViewBag.CheckinDate).Days;

    // Calculate the total price
    decimal totalPrice = nights * pricePerNight;
}

    <style>
        /* Custom Styles for Payment Form */
        .StripeElement {
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            width: 100%;
            margin-bottom: 15px;
        }

        #submit img {
            margin-right: 10px;
            width: 120px; /* Increased logo size */
            height:20px;
        }
        .StripeElement--focus {
            border-color: #28a745;
        }

        .StripeElement--invalid {
            border-color: #dc3545;
        }

        #payment-form {
            max-width: 600px;
            margin: 0 auto;
            padding: 30px;
            background-color: #f9f9f9;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        #submit {
            background-color: #6772e5; /* Stripe color */
            color: white;
            font-size: 16px;
            padding: 12px;
            width: 100%;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: background-color 0.3s ease;
        }

            #submit:hover {
                background-color: #5469d4;
            }

            #submit img {
                margin-right: 10px;
                width: 20px; /* Adjust logo size */
            }

        #error-message {
            color: red;
            font-size: 14px;
            margin-top: 10px;
        }
    </style>

    <h1 class="text-center my-4">Checkout</h1>
    <div class="container">
        <div class="row">
            <!-- Property Details Section -->
            <div class="col-md-8 mb-4">
                <div class="card shadow-sm">
                    <img src="@ViewBag.Property.ImageUrl"
                         alt="Property Image"
                         class="card-img-top img-fluid rounded">
                    <div class="card-body">
                        <h5 class="card-title">@ViewBag.Property.Title</h5>
                        <p class="card-text">
                            <strong>Location:</strong> @ViewBag.Property.City, @ViewBag.Property.Country
                        </p>
                    </div>
                </div>
            </div>

            <!-- Payment Section -->
            <div class="col-md-4">
                <div class="card shadow-sm p-4">
                    <h5 class="card-title">Reservation Details</h5>
                    <p><strong>Check-in:</strong> @ViewBag.CheckinDate.ToString("d")</p>
                    <p><strong>Check-out:</strong> @ViewBag.CheckoutDate.ToString("d")</p>
                    <p><strong>Price per night:</strong> @pricePerNight.ToString("C")</p>
                    <p><strong>Total nights:</strong> @nights</p>
                    <p><strong>Total price:</strong> <span id="totalPrice">@totalPrice.ToString("C")</span></p>
                    <hr>
                    <h6 class="mt-4">Make a Payment</h6>
                    <form method="post" action="/Property/CreateCheckoutSession">
                        <input type="hidden" name="propertyId" value="@ViewBag.Property.Id" />
                        <input type="hidden" name="bookingId" value="@ViewBag.Booking.Id" />
                  @*       <div>
                            <label for="amount">Total Price:</label>
                            <input type="text" id="amount" name="amount" value="@Math.Round(totalPrice, 2)" required readonly />
                        </div> *@
                        <button type="submit" id="submit">

                        Pay with <b><i> Stripe</i></b>
                        </button>
                    <div id="paypal-button-container" class="mt-3">
                        <!-- PayPal button will be injected here by JavaScript -->

                    </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Stripe JS -->
    <script src="https://js.stripe.com/v3/"></script>
<!-- PayPal SDK -->
<script src="https://www.paypal.com/sdk/js?client-id=ASw7PhpScMHI31SsIaVoRKRAg0tG5zAKYMsrDaMOg_DrKeQlWCTC2HU-gaM9WnLyhHEA3VJWJrdV67B1&currency=EUR"></script>

<script>
    // Ensure the PayPal button is only rendered after the SDK is loaded
    window.onload = function () {
        var totalPrice = '@totalPrice'; // Pass the total price from the backend
        paypal.Buttons({
            style: {
                layout: 'vertical',
                color: 'blue',
                shape: 'rect',
                label: 'pay',
            },
            createOrder: function (data, actions) {
                var formattedTotalPrice = parseFloat(totalPrice).toFixed(2);  // Format totalPrice with two decimals
                return actions.order.create({
                    purchase_units: [{
                        amount: {
                            value: formattedTotalPrice.toString()  // Ensure the amount is a valid string
                        }
                    }]
                });
            },
            onApprove: function (data, actions) {
                return actions.order.capture().then(function (details) {
                    // Handle success
                    alert('Payment completed by ' + details.payer.name.given_name);
                    // Redirect to a success page or perform another action
                    window.location.href = '@Url.Action("PaymentSuccess", "Property")';
                });
            },
            onError: function (err) {
                alert('Payment failed: ' + err);
            }
        }).render('#paypal-button-container');  // Render the PayPal button in the container
    }
</script>
    <script>
        var stripe = Stripe('pk_test_51PQ7QcP5M2v9mzckbw2iyH7cPpFM0RGCSpxrAaoaQMQ30VBgtJCfFbvxEvOeoqbi5rsgkT2pIPEyncJPl7H9BUfq00CXZLM0p6'); // Public key from your server
        var elements = stripe.elements();

        // Create a card number element
        var card = elements.create('card');
        card.mount('#card-element');

        // Create an expiry date element
        var expiry = elements.create('expirationDate');
        expiry.mount('#expiry-element');

        // Create a CVC element
        var cvc = elements.create('cvc');
        cvc.mount('#cvc-element');

        // Handle form submission
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', async function (event) {
            event.preventDefault();

            const { paymentIntent, error } = await stripe.confirmCardPayment(
                '@paymentIntentId', {
                payment_method: {
                    card: card,
                    expiration: expiry,
                    cvc: cvc
                }
            });

            if (error) {
                document.getElementById('error-message').textContent = error.message;
            } else {
                if (paymentIntent.status === 'succeeded') {
                    window.location.href = '@Url.Action("PaymentSuccess", "Property")';
                }
            }
        });
    </script>

