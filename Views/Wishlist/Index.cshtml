@model List<airbnbb.Models.Wishlist>
<style>
/* Container for the wishlist */
.properties-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
    margin-top: 30px;
}

/* Each property in the wishlist */
.property-item {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr; /* Three columns: image, details, button */
    gap: 20px; /* Space between columns */
    background-color: #f7f7f7; /* Light background for each property */
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow effect */
    transition: background-color 0.3s ease;
}

/* Property Image */
.property-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
    border-radius: 8px;
}

/* Property Details */
.property-details {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

/* Property Details Heading */
.property-details h3 {
    font-size: 1.2em;
    color: #333; /* Dark gray */
    margin-bottom: 10px;
}

/* Property Description and Price */
.property-details p {
    color: #808080; /* Light gray text */
    font-size: 0.9em;
}

/* Rating Stars */
.rating i {
    color: #ff5a60; /* Airbnb red */
}

/* Book Button */
.book-btn {
    background-color: #ff5a60; /* Airbnb red */
    color: white;
    padding: 10px 20px;
    margin-right:50px;
    font-size: 14px;
    border-radius: 5px;
    text-decoration: none;
    transition: background-color 0.3s ease;
    align-self: flex-start; /* Position button on the left */
}

.book-btn:hover {
    background-color: #ff3b3f; /* Darker red on hover */
}

</style>

<h2>Your Wishlist</h2>

@if (Model != null && Model.Any())
{
    <div class="properties-container">
        @foreach (var item in Model)
        {
            <div class="property-item">
                <!-- Property Image -->
                <img src="@item.Property.ImageUrl" alt="Property Image" class="property-image">

                <!-- Property Details -->
                <div class="property-details">
                    <h3>@item.Property.Title</h3> <!-- Property name -->
                    <p>@item.Property.Description</p> <!-- Property description -->
                    <p><strong>Price:</strong> @item.Property.PricePerNight.ToString("C")</p> <!-- Property price formatted as currency -->

                    <!-- Rating -->
                    <div class="rating">
                        @for (int i = 0; i < 5; i++)
                        {
                            if (i < Math.Floor(item.Property.Rating))
                            {
                                <i class="fas fa-star"></i> <!-- Filled star -->
                            }
                            else if (i < item.Property.Rating)
                            {
                                <i class="fas fa-star-half-alt"></i> <!-- Half star -->
                            }
                            else
                            {
                                <i class="fas fa-star empty"></i> <!-- Empty star -->
                            }
                        }
                    </div>
                </div>

                <!-- Book Button -->
                <a href="@Url.Action("Book", "Property", new { id = item.PropertyId })" class="book-btn">
                    Book Now
                </a>
            </div>
        }
    </div>
}
else
{
    <p>No items in your wishlist.</p>
}
