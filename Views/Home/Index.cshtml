@{
    ViewData["Title"] = "Home Page";
}
<style>
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #fff;
        padding: 20px 30px;
        border-bottom: 1px solid #ddd;
        flex-wrap: wrap; /* Allow wrapping of items if needed */
    }


    .wishlist-icon {
        position: absolute;
        font-size: 24px;
        color: #808080;
        cursor: pointer;
        top: 20px; /* Distance from the top */
        right: 20px; /* Distance from the right */
        transition: color 0.3s ease;
    }

        .wishlist-icon.liked {
            color: #ff5a60; /* Change color when liked */
        }

    /* Styling for the rating stars */
    .rating {
        display: flex;
        justify-content: center;
        margin-top: 10px;
    }

    .property-link {
        text-decoration: none; /* Remove underline */
        color: inherit; /* Ensure the text color remains the same */
    }

        .rating i {
            font-size: 18px;
            color: #ff5a60; /* Color for rating stars */
            margin: 0 2px;
        }

            .rating i.empty {
                color: #ddd; /* Color for empty stars */
            }

    /* Container for header items */
    .header-items {
        display: flex;
        gap: 15px;
        padding:0px 70px;
        flex-wrap: wrap; /* Allow items to wrap to the next line if necessary */
    }
    a{
        text-decoration:none;
    }

    /* Styling for each item in the header box */
    .header-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100px; /* Set a fixed width for each box */
        padding: 10px;

        background-color: #f0f0f0;
        border-radius: 10px;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        /* Icon styling */
        .header-item i {
            font-size: 24px;
            color: #ff5a60; /* Icon color */
        }

        /* Filter name styling */
        .header-item span {
            margin-top: 5px;
            font-size: 12px;
            color: #808080;
        }

        /* Hover effect for each header item */
        .header-item:hover {
            background-color: #ff5a60;
            transform: translateY(-5px); /* Lift the item when hovered */
        }

            /* Hover effect for icon and text */
            .header-item:hover i {
                color: white;
            }

            .header-item:hover span {
                color: white;
            }

    /* Styling for the 'Filters' button */
    .filters-btn {
        background-color: #fff;
        border: 2px solid #ff5a60;
        border-radius: 20px;
        color: #ff5a60;
        padding: 10px 20px;
        cursor: pointer;
        font-size: 14px;
        transition: all 0.3s ease;
    }

        /* Hover effect for the Filters button */
        .filters-btn:hover {
            background-color: #ff5a60;
            color: #fff;
            border-color: #ff5a60;
        }

   /*  .properties-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-top: 30px;
    }

    /* Styling for each property box */
/*     .property-item {
        width: 220px;
        padding: 15px;
        background-color: #f0f0f0;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }  */

    .properties-container {
        display: flex;
        flex-wrap: nowrap; /* Prevent wrapping */
        gap: 20px;
        margin-bottom:40px;
        margin-top: 30px;
        overflow-x: auto; /* Enable horizontal scrolling */
        padding-bottom: 20px; /* Space for scrollbar */
    }

    .property-container {
        display: flex;
        gap: 20px;
    }

    .properties-container::-webkit-scrollbar {
        display: none;
    }

    .properties-container {
        -ms-overflow-style: none; /* Hide scrollbar in Internet Explorer */
        scrollbar-width: none; /* Hide scrollbar in Firefox */
    }

    .property-item {
        width: 320px;
       
        padding: 15px;
        background-color: #f0f0f0;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        flex-shrink: 0; /* Prevent shrinking of items */
        position: relative; /* This will ensure that the wishlist icon is positioned relative to this container */
    }
    /* Hide properties that do not match the filter */
    .hidden {
        display: none;
    }

    /* Styling for property title */
    .property-item h3 {
        margin-bottom: 10px;
    }
/* 
    /* Styling for property description */
    .property-item p {
        color: #808080;
    }

/*     .property-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    } 

    .property-item {
        position: relative;
        width: 300px;
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 10px;
    } */

        .property-item img {
            width: 100%;
            height: 180px;
            border-radius: 5px;
        }

        .property-item h3 {
            font-size: 1.2em;
            margin-top: 10px;
        }

        .property-item p {
            font-size: 1em;
            margin-top: 5px;
        }

        .property-item .price {
            color: green;
            font-weight: bold;
            margin-top: 10px;
        }

    .statistics-container {
        display: flex;
        justify-content: space-between;
        padding: 20px;
    }

    .stat-item {
        width: 23%;
        background-color: #FF5A60;
        color: white;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s ease;
    
    }

    /* Shade variations for each stat item */
    .stat-item-1 {
        background-color: #FF5A60; /* Main color */
    }

    .stat-item-2 {
        background-color: #FF8C91; /* Lighter shade */
    }

    .stat-item-3 {
        background-color: #FF2E3D; /* Darker shade */
    }

    .stat-item-4 {
        background-color: #FF6F7F; /* Slightly lighter shade */
    }

    .stat-item h3 {
        font-size: 1.5rem;
        margin-bottom: 10px;
    }

    .stat-item p {
        font-size: 1rem;
    }

    .stat-item:hover {
        transform: translateY(-5px);
    }

    p.lead {
        font-size: 1rem;
        line-height: 1.6;
        color: #555;
    }

    h4 {
        font-size: 1rem;
        font-weight: bold;
        margin-top: 20px;
    }

    .text-muted {
        font-size: 1rem;
        color: #888;
    }

    h2 {
        font-family: 'Arial', sans-serif;
        font-size: 2rem;
        color: #FF5A60;
        margin-bottom: 20px;
    }
    img.img-fluid {
        width: 100%;
        max-width: 450px;
        border-radius: 50%;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .ceo-words{
        padding: 40px 80px;
    }

    .testimonials {
    background-color: #f9f9f9;
    padding: 50px 0;
}

.testimonials h2 {
    font-family: 'Arial', sans-serif;
    font-size: 2.5rem;
    color: #333;
    text-transform: uppercase;
    letter-spacing: 2px;
    margin-bottom: 40px;
}

.testimonial-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border-radius: 10px;
    background-color: #fff;
    overflow: hidden;
}

.testimonial-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.testimonial-image {
    width: 120px;
    height: 120px;
    object-fit: cover;
    margin: 20px auto;
    border: 4px solid #fff;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.testimonial-text {
    font-style: italic;
    color: #555;
    font-size: 1rem;
    margin-bottom: 15px;
}

.card-body {
    padding: 20px;
    text-align: center;
}

.card-body p {
    margin: 0;
    font-size: 1.1rem;
}

.card-body strong {
    font-size: 1.2rem;
            color: #FF5A60;
}

/* Fade-in animation */
.testimonial-card {
    opacity: 0;
    animation: fadeIn 0.6s ease forwards;
}

.testimonial-card:nth-child(1) {
    animation-delay: 0.2s;
}

.testimonial-card:nth-child(2) {
    animation-delay: 0.4s;
}

.testimonial-card:nth-child(3) {
    animation-delay: 0.6s;
}

    .newsletter {
        background-color: #f8f9fa;
        padding: 60px 0;
        text-align: center;
    }

        .newsletter h2 {
            font-family: 'Arial', sans-serif;
            font-size: 2.5rem;
            color: #333;
            font-weight: 600;
            margin-bottom: 30px;
        }

    .newsletter-form {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        max-width: 600px;
        margin: 0 auto;
    }

        .newsletter-form input {
            width: 100%;
            max-width: 400px;
            padding: 15px;
            font-size: 1.1rem;
            border-radius: 5px;
            border: 2px solid #ccc;
            outline: none;
            transition: border-color 0.3s ease;
        }

            .newsletter-form input:focus {
                border-color: #FF5A60;
            }

        .newsletter-form button {
            padding: 15px 30px;
            font-size: 1.1rem;
            font-weight: 600;
            color: white;
            background-color: #FF5A60;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .newsletter-form button:hover {
                background-color: #FF7B7F;
                color:white;
                transform: translateY(-3px);
            }

            .newsletter-form button:active {
                transform: translateY(1px);
            }


</style>

<section>
    <header class="header">
        <div class="header-items">
            <div class="header-item" data-filter="Top of the world"><i class="fas fa-globe"></i><span>Top of the world</span></div>
            <div class="header-item" data-filter="trending"><i class="fas fa-fire"></i><span>Trending</span></div>
            <div class="header-item" data-filter="hanks"><i class="fas fa-user"></i><span>Hanks</span></div>
            <div class="header-item" data-filter="private"><i class="fas fa-lock"></i><span>Private rooms</span></div>
            <div class="header-item" data-filter="Countryside"><i class="fas fa-tree"></i><span>Countryside</span></div>
            <div class="header-item" data-filter="ski"><i class="fas fa-snowboarding"></i><span>Ski-in/out</span></div>
            <div class="header-item" data-filter="cabins"><i class="fas fa-home"></i><span>Cabins</span></div>
            <div class="header-item" data-filter="Rides"><i class="fas fa-bicycle"></i><span>Rides</span></div>
        </div>
    </header>
    <div class="properties-container">
        <div class="property-container">
            @foreach (var property in ViewBag.Properties as List<airbnbb.Models.Property>)
            {
            

                <div class="property-item" data-category="@property.Category">
                    <a href="@Url.Action("Details", "Property", new { id = property.Id })" class="property-link">
                    <img src="@property.ImageUrl" alt="Property Image">
                    <h3>@property.Title</h3>
                    <p><strong>Country:</strong> @property.Country</p>
                        <p><strong>Price per night:</strong> @property.PricePerNight.ToString("C")</p>
                    </a>
                    <!-- Rating stars -->
                    <div class="rating">
                        @for (int i = 0; i < 5; i++)
                        {
                            if (i < Math.Floor(property.Rating))
                            {
                                <i class="fas fa-star"></i> <!-- Filled star -->
                            }
                            else if (i < property.Rating)
                            {
                                <i class="fas fa-star-half-alt"></i> <!-- Half star -->
                            }
                            else
                            {
                                <i class="fas fa-star empty"></i> <!-- Empty star -->
                            }
                        }
                           

                    </div>


                    @if (Context.Request.Cookies["token"] != null && Context.Request.Cookies["Role"]!="Admin")
                    {
                        <!-- Wishlist heart icon -->
                        <i class="fas fa-heart wishlist-icon" data-property-id="@property.Id"></i>
                    }
                </div>
         
            }
        </div>
    </div>
    <section class="statistics">
        <div class="statistics-container">
            <div class="stat-item stat-item-1">
                <h3>+20k</h3>
                <p>Satisfied Clients</p>
            </div>
            <div class="stat-item stat-item-2">
                <h3>+3k</h3>
                <p>Homes Available</p>
            </div>
            <div class="stat-item stat-item-3">
                <h3>+23k</h3>
                <p>Bookings Made</p>
            </div>
            <div class="stat-item stat-item-4">
                <h3>2k</h3>
                <p>Cities Covered</p>
            </div>
        </div>
    </section>
    <div class="container ceo-words">
        <div class="row align-items-center">
            <div class="col-md-6">
                <img src="owner.png" alt="Owner Image" class="img-fluid rounded-circle shadow-lg">
            </div>
            <div class="col-md-6">
                <h2 class="font-weight-bold">Our Commitment to Client Satisfaction</h2>
                <p class="lead">At <strong>Renter</strong>, we are dedicated to providing exceptional service and ensuring the satisfaction of every client. Our team is committed to being responsive, reliable, and trustworthy in every interaction.</p>
                <p class="lead">We work hard to create lasting relationships with our clients, built on trust, transparency, and excellence. Your satisfaction is our top priority, and we continuously strive to improve and innovate to serve you better.</p>

                <div class="mt-4">
                    <p class="font-italic">"We believe in building strong, lasting relationships with every client. Your happiness is our success!"</p>
                    <h4 class="text-secondary">Anastasia-Rose</h4>
                    <p class="text-muted">CEO of Renter</p>
                </div>
            </div>
        </div>
    </div>


   <section class="testimonials py-5">
    <h2 class="text-center mb-4">What Our Guests Say</h2>
    <div class="row">
        <!-- Testimonial 1 -->
        <div class="col-md-4">
            <div class="card shadow testimonial-card">
                <img src="guest1.jpg" alt="Guest 1" class="card-img-top rounded-circle testimonial-image">
                <div class="card-body text-center">
                    <p class="testimonial-text">"Amazing stay! The property was exactly as described. Highly recommend!"</p>
                    <p><strong>John Doe</strong></p>
                    <p>Rating: ★★★★☆</p>
                </div>
            </div>
        </div>

        <!-- Testimonial 2 -->
        <div class="col-md-4">
            <div class="card shadow testimonial-card">
                <img src="guest3.jpg" alt="Guest 2" class="card-img-top rounded-circle testimonial-image">
                <div class="card-body text-center">
                    <p class="testimonial-text">"The best vacation I’ve ever had. Truly amazing experience!"</p>
                    <p><strong>Jane Smith</strong></p>
                    <p>Rating: ★★★★★</p>
                </div>
            </div>
        </div>

        <!-- Testimonial 3 -->
        <div class="col-md-4">
            <div class="card shadow testimonial-card">
                <img src="img2.jpg" alt="Guest 3" class="card-img-top rounded-circle testimonial-image">
                <div class="card-body text-center">
                    <p class="testimonial-text">"A great place to relax and unwind. Would definitely return!"</p>
                    <p><strong>Michael Johnson</strong></p>
                    <p>Rating: ★★★★☆</p>
                </div>
            </div>
        </div>
    </div>
</section>

    <section class="newsletter py-5">
        <div class="container">
            <h2 class="text-center mb-4">Subscribe to Our Newsletter</h2>
            <form action="#" class="newsletter-form d-flex justify-content-center">
                <input type="email" class="form-control" placeholder="Enter your email" required>
                <button type="submit" class="btn btn-primary ms-2">Subscribe</button>
            </form>
        </div>
    </section>


  
</section>
<script>

    document.addEventListener("DOMContentLoaded", function () {
        const wishlistIcons = document.querySelectorAll('.wishlist-icon');

        // Get the liked status for each property from the server (or cookie)
        wishlistIcons.forEach(icon => {
            const propertyId = icon.getAttribute('data-property-id');

            // Assuming you send a request to check if the user has liked the property
            fetch(`/Property/CheckIfLiked?propertyId=${propertyId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.isLiked) {
                        icon.classList.add('liked'); // Set initial state based on server response
                    }
                })
                .catch(error => {
                    console.error('Error checking liked status:', error);
                });

            // Toggle the 'liked' class on click
            icon.addEventListener('click', function () {
                icon.classList.toggle('liked');
                toggleWishlistStatus(propertyId, icon.classList.contains('liked'));
            });
        });
    });

    // Function to update the wishlist status on the server
    function toggleWishlistStatus(propertyId, isLiked) {
        fetch('/Property/ToggleWishlist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                propertyId: propertyId,
                isLiked: isLiked
            })
        }).then(response => {
            if (response.ok) {
                console.log('Wishlist status updated.');
            } else {
                console.error('Failed to update wishlist status.');
            }
        }).catch(error => {
            console.error('Error:', error);
        });
    }


        // Wait for the DOM to be fully loaded
        document.addEventListener("DOMContentLoaded", function () {
            // Get all header items with filter data
            const filterItems = document.querySelectorAll('.header-item');

            // Get all property items
            const propertyItems = document.querySelectorAll('.property-item');

            // Add click event listeners to header items
            filterItems.forEach(item => {
                item.addEventListener('click', function () {
                    const filterValue = item.getAttribute('data-filter');

                    // Loop through all property items and hide those that do not match the filter
                    propertyItems.forEach(property => {
                        if (filterValue === "all" || property.getAttribute('data-category') === filterValue) {
                            property.classList.remove('hidden'); // Show the property
                        } else {
                            property.classList.add('hidden'); // Hide the property
                        }
                    });
                });
            });
        });
</script>